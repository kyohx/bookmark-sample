name: Check and Tests

on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "LICENSE"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "LICENSE"

jobs:
  check:
    name: Run check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup uv
        uses: astral-sh/setup-uv@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install python packages
        run: uv sync --all-extras
      - name: Check format
        run: uv run ruff check ./
      - name: Check types
        run: uv run mypy .
      - name: Check security issues in Python code
        run: uv run bandit --quiet --recursive src
      - name: Check update openapi.json
        run: diff ./openapi.json <(uv run python -m src.generate_openapi)
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup uv
        uses: astral-sh/setup-uv@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install python packages
        run: uv sync --all-extras
      - name: Setup DB container 
        run: docker compose up -d --quiet-pull --wait db
      - name: Run tests
        run: uv run pytest
        env:
          TEST_DB_HOST: localhost
  deploy:
    name: Run deploy
    runs-on: ubuntu-latest
    needs:
      - check
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.14.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
